
####LEGENDA


#### =  mais um dia
*Notaveis conquistas
indexação =  parte do topico anterior
? Duvidas
-1) Objetivos futuros.
!!!! = CONCLUSOES
Sempre pular varias linhas de um dia para outro.























##### Diario de desenvolvolvimento dia 28/01/2020

 *https://www.youtube.com/watch?v=lmOF2zyeLUs

Este vídeo a pessoa fez um classificador de imagens usando DOCKER. Aparentemente é necessário pegar o clone do codigo para poder testar...
? O que é o DOCKER ?
? Como o codigo funcionava ?

 *https://www.youtube.com/watch?v=qaIX5ZLiR1g&t=1s

Este vídeo é um tutorial do TENSORFLOW oficial, ensinando em portugues à utilizar o tensorflow.js 
Este video é o terceiro da serie

 *https://www.youtube.com/watch?v=epSgXU3AyiI&list=PLQY2H8rRoyvz8oumEhsqSG4bl7JH7_YSG&index=2&t=0s

Este video é o primeiro da serie, porém, conhecimento em programação WEB é necessária

 *https://www.youtube.com/watch?v=7a1O_4JQWxo

Porquê de usar o tensorflow e keras

 *https://www.tensorflow.org/tutorials/images/classification

Entrei no site do tensorflow e coloquei em tutoriais. tentarei usar o keras em cima do tensor flow

























##### Diario de desenvolvolvimento dia 29/01/2020

  *Definindo objetivo*

Objetivo: Seguindo o tutorial do tensorflow usando Keras o treinamento ocorreu e demonstrou grande eficácia.
	Entretanto, não consegui acessar a rede neural que foi treinada. Portanto tenho por objetivo :
->Entender o código e utilizar o msm para classificar personagens. O banco de dados deverá ser montado por mim msm e ter uma pasta no desktop
->UPDATE DO CODIGO:
   -->Salvar/lembrar a rede neural treinada
   -->Transformá-la em objeto para que eu consiga facimente usá-la em outros codigos.
























##### Diario de desenvolvolvimento dia 30/01/2020

*Compredido a funcao da funcao path.join da biblioteca OS
*Compreendido a parte de preprocessamento exceto o class_mode
*Compreendido a importancia de banco de validação
*Compreendido a parte da criaçao do modelo!! O modelo é um OBJETO, no caso, nossa rede. A compilação do modelo determina a configuração de aprendizado. O fit  é a funcao q TREINA a nossa rede.
*model.save, salva nossa rede.
























##### Diario de desenvolvolvimento dia 31/01/2020

*Para carregar uma rede salva:
	from tensorflow.keras.models import load_model
		model = load_model('nome_salvo')

*Para usar o feedforward de uma rede:  https://www.youtube.com/watch?v=A4K6D_gx2Iw
	Preparamos a foto.png no mesmo enquadre das fotos utilizadas em treinamento obtendo foto_preparada.png
	prediction = model.prediction('foto_preparada.png')
	print(prediction)

























#### Diario de desenvolvimento do dia 05/02/2020

*Checando o que é YOLO:

https://youtu.be/4eIBisqx9_g     
Explica toda a historia e apresenta o que deu certo e o que deu errado. Ele comenta de um metodo chamado R-CNN que é: pegamos uma imagem e escolhemos um numero fixo de caixas que serao espalhadas randomicamente pela imagem. Estas caixas passarão pela rede convulucional. O método R-CNN foi melhorado por varias outras ideias, entre elas o o YOLO!!
O YOLO -  ´You Only Look Once´, entre os metodos, é o que mais se destaca pela performance e accurate rate.
	YOLO PROPOSAL:

		*Divide a imagem em uma grade onde cada grade;
		*?? De alguma forma as grades se interceptam, e as melhores formam as linhas mais grossas que depois, se tornam um box mostrando o que tem dentro;
		*Toda a imagem é alimenta uma unica rede convolucional;


	ELe implementa usando um software chamada darknet e darkflow
	Existem varias versoes de YOLO





















#### Diario de desenvolvimento do dia 06/02/2020

Terminando de assistir o video do dia 05/02/2020. Ele utilizou o tensorflow, darknet, darkflow e cython para colocar o YOLO real-time com um video de uma mulher andando.

-1) Tentando usar o YOLO para rodar um video qualquer...
-2) Consigo treinar o YOLO para classificar qualquer objeto? Como faço? Se não, como o YOLO foi implementado?
-3) O que é cada ferramenta listada?

*https://pysource.com/2019/06/27/yolo-object-detection-using-opencv-with-python/
yolo - DEEPLEARNING LIBRARY WHICH NEEEDS A DARKNET FRAMEWORK (WORKS ONLY ON LINUX), ALTHOUGH, IT APPEAR LIKE YOU CAN USE OPENCV FRAMEWORK for CPU or DARKFLOW on WINDOWS for GPU/CPU

*https://towardsdatascience.com/tutorial-build-an-object-detection-system-using-yolo-9a930513643a

*https://blog.insightdatascience.com/how-to-train-your-own-yolov3-detector-from-scratch-224d10e55de2
Para treinar uma rede YOLO, voce deve pegar uma imagem e criar labels (ou seja, um quadro em volta do objeto).Uma imagem pode conter o label que quiser.Nesse site, é apresentado um aplicativo que auxilia nas legendas

*https://hackernoon.com/understanding-yolo-f5a74bbc7967

*https://dzone.com/articles/understanding-object-detection-using-yolo
YOLOv2 é mais rapido.
YOLOv3 é mais preciso.



















####  Diario de desenvolvimento do dia 12/02/2020:

*Revisão do diario;
*Legendamento da função load e predict.model;

*https://www.youtube.com/watch?v=h56M5iUVgGs 
Esse vídeo ensiana a usar o yolo sobre o framework do opencv. Lendo os comentários da internet, ao utilizar o opencv, a caracteristica ¨real-time¨ é perdida.

*https://dzone.com/articles/understanding-object-detection-using-yolo

*https://pjreddie.com/media/files/papers/YOLOv3.pdf
paper do yolo.v3

*https://arxiv.org/pdf/1506.02640.pdf
paper do YOLO

*https://pjreddie.com/darknet/yolo/
Local o o YOLO reside

*Leitura do paper YOLO.v2
YOLO outperforms DMB e R-CNN neural networks. R-CNN é a primeira rede que busca separar a imagem em retangulos e depois passar por redes convolucionais. Esse paper ainda explica sobre o uso de fast R-CNN, que o diz confundir algmas classificações por não prever o contexto (ja que o YOLO vê toda a imagem).
GoogLeNet
Técnicas de pré-treino para o aumento de velocidade de treinamento com full resolution?























####  Diario de desenvolvimento do dia 26/02/2020:


*https://www.youtube.com/watch?v=h56M5iUVgGs 
Assisti todo o tutorial do YOLO com o framework do opencv. O que posso concluir? 
	-Se na CPU o resultado ja é bem ruim, imagina em um microcontrolador. Isso me assusta bastante.
	-O tiny YOLO é uma versao ainda mais rápida, porém, bem menos precisa.
	

*https://pjreddie.com/darknet/yolo/
Testei o tutorial do YOLO -> Nao funcionou . (OUT OF DATE)


*https://www.youtube.com/watch?v=2TikTv6PWDw&list=PLX-LrBk6h3wRAF22jBUxDgOvyhIgLN4Cg
Uma playlist que promete ensinar a criar um R-CNN object detector com uma mascara
			--- FASTER R-CNN

*https://www.youtube.com/watch?v=PyjBd7IDYZs&list=PLX-LrBk6h3wSGvuTnxB2Kj358XfctL4BM
Uma playlist que promete ensinar e criar uma rede de arquitetura YOLO para object detector

*DRAW I/O FERRAMENTA DE PLANEJAMENTO

				!!!!(moment):
					-Todas as bibliotecas utilizam-se de algum framework e uma arquetetura de rede neural para seu funcionamento.
					-Por mais que o YOLO seja a arquitetura mais top existente, ela ainda nao é suficiente para dual-core 128 MHz ESP 32 processor -  e nem tem como embarcar, inclusive.
					-Nao consegui classificar nada ainda, desde de o dia 28/01/2020  com alguma acurácia > 70%
						
					--AUTO CONHECIMENTO DE PROJETO:
						-REAL TIME
						-ACURACIA BOA
						-CLASSIFICAÇÃO BINARIA (É, OU NAO?)
						-ALTAMENTE ADAPTATIVO PARA EFICIENCIA (CONSEGUIR REALIZAR TROCAS DE PARAMETROS E DIMINUIÇOES DE DETECTORS PARA QUE POSSA SEMPRE QUE POSSIVEL AUMENTAR O FPS)
						-IDENTIFICAR AS COORDENADAS (X,Y) DOS PIXELS ONDE O OBJETO FOI RECONHECIDO
						-MATEMÁTICA DISCRETA (FEEDFORWARD) COM OUTPUTS SIMPLIFICADOS  --> EMBARCAR
						
						ESTES TOPICOS PROPORCIONARÃO O ESSENCIAL PARA QUE EU CONSIGA EMBARCAR VISAO EM PEQUENOS PROJETOS!!!!!
						
					--PARA O PROJETO DA FISCALIZAÇÃO DE ISOLADORES É NECESSÁRIO ADICIONAR AO PLANO:
						-OBTER TAMBEM O WIDTH E O HEIGHT PARA TRAÇAR A ALTURA E LARGURA;
						
						ESTA CARACTERISTICA IRA PERMITIR, IDENTIFICAR QUAL O BLOCO DA IMAGEM ESCALADA EM REAL-TIME, ONDE ESTA O ISOLADOR E QUAL O TAMANHO DO CROP DEVE SER EFETUADO
						REESCALANDO O CROP PARA A IMAGEM DE ALTA RESOLUCÃO PODEREMOS JOGAR TODA A IMAGEM EM UM MASK R-CNN E OBTER O O SHAPE RECORTADO (TORNAR O FUNDO DA IMAGEM PRETO)
						OBTENDO SOMENTE O SHAPE DO ISOLADOR -> Processo com rede neural utilizando zoom dinamico e full imagem resolution para dizer se precisa de limpeza ou nao.

	1) Leitura do paper do YOLO e do R-CNN para entender como as coordenadas X,Y,W,H,P sao obtidas e como eles treinam a rede;
	2) Utilizando o Keras, criar minha propria arquitetura;
	3) Testar detector -> copos ou nada e utilizando a biblioteca time.h obter a eficiencia -->>>>


*How to train YOLO with custom objects:  https://youtu.be/XRVzuV9RexY

?? How dows a repo works?  .. . learning github~!!!
	0) Learning github as pro.

git init // initialize  Local git repo (o repositorio esta onde voce abrir o terminal.)
git add <file> // adiciona um do repositorio para area de atencao
git status //checa o status, qual a diferencia entre o que esta para enviar e o arquivo real do local
git config --global user.name <'nome'>  // configura o nome do repositorio
git config --global user.email <'nome'>  // configura o email do re'positorio
git rm --cached <file> //  para tirar algum arquivo da area de atencao
git commit -m 'comments' // 
git push // manda para online repo
git pull // atualiza o local repo pelo online repo
git clone // baixa todo o repositorio em uma pasta
git branch <nome>
git checkout <nome> //muda de branch
git merge <nome> -m 'coment'

1)init
2)add
3)commit
4)push

para carregar

1)init
2)pull


















#### 02/03/2020

-Criando o repositorio privado;

1) INSTALAR AS DEPENDENCIAS E RETOMAR A PESQUISA















#### 09/03/2020

Discutir ideias com o Rogério.

	Conclusão da conversa:
	-Focar no keras: o funcionario  irá enquadrar a camera no isolador utilizando seu bom senso. O zoom é um auxiliar DO FUNCIONARIO
	-Em cima das imagens coletadas pelo funcionario - minha classificação trabalhará


















#### 10/03/2020:

Comece meu dia tentando montar um data-set de imagens:

	-Minha camera estava com pouca memoria.

		!!!!) Daria muito trabalho para montar o data-set e como É UM DATASET dificil de classificar, ficaria em duvida se isto é um problema do meu codigo ou do dataset.
			visto isto decidi classificar duas coisas bem mais distintas que um pote_sujo x pote_limpo : cadeiras de universidade de mesas de universidade!!

	-Continuando nesta ideia, não precisaria tirar fotos manualmente.

Como baixar fotos em bash
			 bash <(wget -qO- git.io/get-googliser)   //Instalando o googliser 
	
	Para usá-lo:
			googliser -n <numero de imagens> --phrase <pesquisa>  // criará no diretorio uma pasta com o nome da pesquisa e as imagens baixadas em definição maxima.
					



	!!!!) cadeiras não sera um bom exemplo, pois ao analisar o bash, o fundo sempre era branco e as cadeiras eram diferentes demais... 

		Tive outra ideia! : por que nao classificamos pardais?
				O dataset é grande e a diferença entre pardais machos e femea é MUIIITO SUTIL!!! Alem disso, o fundo não é padronizado.


Consegui baixar (mesmo não sendo mais que 100 fotos).

	vamos às adequações:   
		No path, deve existir duas pasta uma de treinamento e outra de validação...

*http://deeplearningbook.com.br/introducao-as-redes-neurais-convolucionais/
Site otimo para obter conhecimento matemático e teorico de redes neurais.





#### 12/03/2020:


	*https://keras.io/why-use-keras/
	Explanando o porquê de usar keras.


	10)Criar outro codigo com base no keras que aprenda o algoritmo de aprendizado convolucionado.
		A biblioteca 'os' quase sempre é uma mao na roda pois ajuda voce a usar chamadas de sistema.
		*https://keras.io/preprocessing/image/      
			Este site mostra todas as funções de preprocessamnto disponiveis
		A tentativa 2 foi iniciada.
		Um esquema foi montado no drive.
		Aprendido nova bibliotca de nome shutil


	20)Um dos features que eu mais curtiria enquanto treino uma rede é TREINAR PROGRESSIVAMENTE. Como fazer isto? Isto é uma boa estratégia?

	30)Data augmentation

	40)GANS


	????)Ficou faltando quase todo o codigo, a continuação esta em settar os parametros no arquivo. O arquivo entao é fechado, re-aberto em forma de leitura e todos os parametros sao capturados.
	








#### 21/03/2020:

Como estudar visao daqui para frente:

	10)Ler os textos do site http://deeplearningbook.com.br/introducao-as-redes-neurais-convolucionais/
	20)Montar o algoritmo
	30)Testar as ferramentas e anotar os resultados (dia 12/03)
	40)Alterar variaveis de rede neural e anotar resultados

	!!!!)Sempre colocar loadar em horarios de laser ou de noite, dessa forma nao perco tempo


















#### 23/03/2020:

Iniciei meu dia seguindo o diagrama criado no dia 10/03/2020
Ao alterar tudo, pensei, 'como faço para abrir um arquivo que não esta no diretorio do compilador???' Esta duvida deveria ser obvia, mas, se ela fosse respondida não haveria o porquê de utilizar o shutill.
Descobri que é so colocar o path no lugar do nome que tudo aparece no local desejado.

Um bug apareceu e eu simplesmente nao conseguia rodar mais meu codigo.

tive que commitar , pushar, e retornar na log para quando meu codigo funcionava

Descobri que parou de funcionar pq queria mover um arquivo que nao existia (pois agora, ele ia para o diretorio diretamente)

Retornei na versao, e retirei o shutill

TROUBLESHOT: UnicodeDecodeError: 'utf-8' codec can't decode byte 0xe7 in position 693: invalid continuation byte
é por que a funçao input ficou muito longa ou com \n no final.


TROUBLESHOT: UnicodeDecodeError: 'utf-8' codec can't decode byte 0xe1 in position 693: invalid continuation byte
Aparentemente é um bug aleatorio ligado ao input -- Quando algo assim acontecer, de uma olhada e procure por simbolos ou acentos.


Agora com o arquivo criado, vou coletar as variaveis e armazená-las no arquivo de parametros

Outra dica é usar a funçÃo diff do github.





















####  24/03/2020:

	*https://keras.io/preprocessing/image/

	O dia iniciou e continuei seguindo o diagrama.
	Consegui salvar os parametros no arquivo, assim como lê-los
	Com isso em mão, configurei uma função que treina a rede.
	Outro parametro que aprendi é mudar o class para categorico. Desta forma, o output sera hotencoded, assim como queria.
	O modelo precisou ser rearranjado para ter duas saidas, pois agora é categorico.
	
	Infelizmente o problema do dia anterior voltou... Ao executar a funçao do keras ele insiste em dar um problema devido à caracteres especiais...
	Para finalizar o horario, testei no primeiro codigo agora como categorico, pois, ja havia lido que a diferença entre categorico e binário no aprendizado é marcante.

	Desta vez o bug veio de maneira diferente, o codigo chega a rodar o keras, mas na hora do treinamento ele da o bug. Vi que ficou variaveis sem declarar... Inclusive, não vi como a função funciona e o que cada termo significa.


 
























#### 25/03/2020:

	O dia de hoje teve como objetivo brincar e testar um pouco algumas funcoes a cerca do problema... Quando mudei o erro, tudo bugou.. Apesar de estar funcionando.

	








        
#### 26/03/2020

	Testei outras arquiteturas. Nenhuma realmente demonstrou alguma alteração significativa.
	Com isso conclui algumas informações com base nos modelos ja testados e decidi assistir o curso de keras em reconhecimento de imagem primeiro.

		*https://www.tensorflow.org/install/gpu   
			Arrumando o problema de nao conseguir usar a gpu.







#### 27/03/2020:

	Todos os testes que fiz no dia levou a concluir que aumentar excessivamente o numero de parametros de uma rede nem sempre é bom!!!
		As redes que tinham menos parametros foram as que demonstraram melhor aprendizado e melhor taxa de acerto! Alem de tudo treinavam rapido e eram estáveis.

	Segue links de algumas fontes de leitura:

	*Understanding Neural Networks Through Deep Visualization   :   http://yosinski.com/media/papers/Yosinski__2015__ICML_DL__Understanding_Neural_Networks_Through_Deep_Visualization__.pdf
	*Practical Bayesian Optimization of MachineLearning Algorithms   :    https://papers.nips.cc/paper/4522-practical-bayesian-optimization-of-machine-learning-algorithms.pdf
	*Spatial Transformer Networks         :          https://arxiv.org/pdf/1506.02025.pdf
	*Visualizing and Understanding Convolutional Networks     :       https://arxiv.org/pdf/1311.2901v3.pdf
	*https://datascience.stackexchange.com/questions/28244/choosing-layer-hyper-parameters-of-a-cnn

	***** Um livro:  Deep Learning - Ian Goodfellow, Yoshua Bengio and Aaron Courvile
		


	10)Objetivo para o dia 28 é olhar todos os teste e sintetiza-los.















#### 28/03/2020 

	10)Olhar todos os teste e sintetiza-los.
		Alem de tudo montei uma planilha de visualizacao de dados.
			¨E se eu fizer uma rede que é especializada em criar redes neurais???!¨						
			*Hora pode estar com 85% e hora 30%, para fazermos o controle o correto era checar dentro de um intervalo maximo de epocas, e pegar a rede que obteve maior sucesso. Talvez, salvando as que foram os picos.
			*Trabalhar com muitos parametros tornou a rede extremamente instavel e dificil de aprender, principalmente com pouco dataset e pouco pooling.
			*Dropout atrapalhou o aprendizado em todos os exemplos
			*A rede teve taxa de aprendizado maior e expressiva somente quando o pooling foi aumentado.
			*Data augmentation tornou a rede mais instavel, porém  dificultou substancialmente o ovefitting.
			*Uma maneira de diminuir a flutuação de dados é diminuir o learning rate da funcao adam.
			*É importante que exista uma deeplayer. Porém, caso ela seja muito grande o seu aprendizado ficar instavel.
			*Nao existiu diferenças entre usar classificaçao categoria e binaria (quando a categorica for binaria)
			*Aumentar o numero de deeplayers não afetou o aprendizado - simplesmente aumento o numero de parametros.


	20)Fazer novos testes
		Decidi assistir o curso. A ideia é retirar o maximo de informaçao do curso antes de fazer novos testes e conclusoes

	30)Assistir o curso de AI
		Aprendi hoje a:
			-Remover o eager_execution
			-Declarar sessions
			-Declarar constantes
			-Declarar placeholders e variaveis
			-Iniciar variaveis globais
			-Usar diferentes nucleos nos calculos
			-Usar o tensorboard
			


	Avaliando as arquiteturas às quais testei percebi que eu não sei o que é uma convolução ainda.
		
	40)Qual a diferença entre :

			1- conv + pool + conv 
			2- conv + conv + pool

			??????????????????????




















#### 31/03/2020:

	Hoje o curso foi assistido e funcoes ensinando a preprocessar, treinar e analisar o modelo, no keras foram aprendidas.
		Funcoes marcantes:
			sequential
			dense
			astype()
			np.reshape
			history.history
			save
			load
	Todas as outras funcoes foram salvas no arquivo tensorflow_aprendizado assim como o detalhe do que cada uma delas fazem.


	


		
			





















#### 01/04/2020:

	A seção teorica sobre redes neurais foi assistida:
		*Descobri que existe maneiras de avaliar uma rede neural, pesquise por : REGULARIZATING OF A NEURAL NETWORK
		*Comparações entre funcoes de ativação foi realizada.
		*Sobre loss funtion o melhor é o cross entropy
		*E o optimizer o adam.


















#### 02/04/2020:  
	
	Comecei dia fazendo um relatorio e enviando para o Rogerio.
		Usando bibliotecas do scikit-image, aplicamos convolucao com alguns kerneis e visualizamos as imagens.
		Foi explicado o problema do dying_relu
		Foi explicado o batch_normalization
	*https://www.youtube.com/watch?v=dXB-KQYkzNU
		Neste site, explica-se melhor o que é batch normalization.
		Batch normalization é uma técnica de individualização de layer, onde a layer aprende de com base em uma media de desvios.











#### 03/04/2020:

	O arquivo com funcoes foi renomeado para Artificial_inteligence_funtions_and_tools.txt
	A video aula de hoje explicou o funcionamento das funcoes do keras apartir do tensorflow
		Um codigo esta sendo desenvolvido para criar uma rede neural convolucional no dataset do MNIST
		Parei no tempo 8:15 quando ele usa uma funcao que foi deprecated e tive que contornar. Para o proximo dia devo dar um jeito de dar um shuffle no data e criar batchs. Alem disso, devo criar um sistema de epochs e registramento de erros e acuracia.
		O codigo sera salvo como CNN_tf_1.py






#### 13/04/2020:

	*Revisei o codigo
	*Tentei dar shuffle apartir de uma lista de cardapio, porem, nao funcionou.
	*Descobri uma funcao shuffle na biblioteca sklearn.
	*Nao foi possivel efeturar a operaçao de treinamento usando o batch do tamanho total dos dados. O pc simplesmete trava.
	*Usando batchs menores tudo funcionou perfeitamente.
	*O codigo rodado pelo tensorflow (codigo pessoal) teve eficiencia menor do que a do codigo pelo keras, provavelmente porque nao soube lidar com os batchs
	*Pulei o restante, pois ja nao estava absorvendo, mas de forma geral ficou faltando salvar os pesos e avaliar suas aparencias.
	

	O proximo dia tratará o mesmo assunto so que em keras.






	

